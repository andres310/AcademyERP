<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>me.andres</groupId>
	<artifactId>acad</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>acad</name>
	<description>
		This is a very simple Jakarta EE application generated by the official Eclipse Starter.
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
		<maven.compiler.release>17</maven.compiler.release>
		<jakartaee-api.version>10.0.0</jakartaee-api.version>
		<wildfly.version>33.0.2.Final</wildfly.version>
		<compiler-plugin.version>3.13.0</compiler-plugin.version>
		<war-plugin.version>3.4.0</war-plugin.version>
		<wildfly-plugin.version>5.0.1.Final</wildfly-plugin.version>
		<wildfly-jar-maven-plugin.version>11.0.2.Final</wildfly-jar-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-core-api</artifactId>
			<version>${jakartaee-api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jakarta Enterprise Beans (EJB) -->
    	<dependency>
    	    <groupId>jakarta.ejb</groupId>
    	    <artifactId>jakarta.ejb-api</artifactId>
    	    <version>4.0.0</version>
    	    <scope>provided</scope>
    	</dependency>

		<!-- Hibernate JPA provider -->
    	<dependency>
    	    <groupId>org.hibernate.orm</groupId>
    	    <artifactId>hibernate-core</artifactId>
    	    <version>6.0.0.Final</version>
    	</dependency>

    	<!-- MySQL JDBC Driver -->
    	<dependency>
    	    <groupId>mysql</groupId>
    	    <artifactId>mysql-connector-java</artifactId>
    	    <version>8.0.32</version>
    	</dependency>
	</dependencies>

	<build>
		<finalName>acad</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Execute 'mvn clean package wildfly:dev' to run the application. -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${wildfly-plugin.version}</version>
				<configuration>
					<version>${wildfly.version}</version>
					<server-config>standalone.xml</server-config>
				</configuration>
			</plugin>

			<!-- Bootable jar para ejecutar 'java -jar target/nombre_proyecto-bootable.jar' -->
			<!-- Tambien puede ejecutarse 'mvn clean wildfly-jar:dev-watch' -->
			<plugin>
    		  <groupId>org.wildfly.plugins</groupId>
    		  <artifactId>wildfly-jar-maven-plugin</artifactId>
			  <version>${wildfly-jar-maven-plugin.version}</version>
    		  <configuration>
    		    <!-- Donde buscara las extensiones (repositorio) -->
				<feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</feature-pack-location>
				<!-- Especificamos las layers que vamos a utilizar (datasource, jax-rs, jsf, etc) -->
				<layers>
					<layer>jaxrs-server</layer>
					<layer>ejb</layer>
    				<layer>datasources</layer> <!-- Para conexiÃ³n con base de datos -->
				</layers>
    		  </configuration>
    		  <executions>
    		    <execution>
    		      <goals>
    		        <goal>package</goal>
    		      </goals>
    		    </execution>
    		  </executions>
    		</plugin>
		</plugins>
	</build>
</project>
